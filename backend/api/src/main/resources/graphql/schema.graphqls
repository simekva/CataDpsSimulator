type Query {
  allItems: [Item!]!
  itemById(id: ID!): Item!
  getWowClass: WowClass!
  itemBySlot(itemSlot: ItemSlotEnum!): [Item!]!
}

type Mutation {
  createWowClass(
    class: String!
    pStats: PrimaryStatsInput!
    sStats: SecondaryStatsInput!
    baseStats: BaseStatsInput!
  ): WowClass!
  createItem(itemInput: ItemInput!): Item!
  deleteItem(id: ID!): Item
}

enum ItemSlotEnum {
  HEAD
  NECK
  SHOULDERS
  CHEST
  WAIST
  LEGS
  FEET
  WRISTS
  HANDS
  FINGER
  TRINKET
  BACK
  MAIN_HAND
  OFF_HAND
}

enum StatEnum {
  ARMOR
  STRENGTH
  AGILITY
  INTELLECT
  STAMINA
  SPIRIT
  EXPERTISERATING
  HITRATING
  CRITRATING
  MASTERYRATING
  HASTERATING
  ATTACKPOWER
  SPELLPOWER
}

enum GemSlotColorEnum {
  META
  RED
  BLUE
  YELLOW
}

type Item {
  id: ID!
  name: String!
  itemLevel: Int!
  itemSlot: ItemSlotEnum!
  gemSlots: [GemSlot!]!
  stats: [stat!]!
  isTwoHand: Boolean
}

input ItemInput {
  name: String!
  itemLevel: Int!
  itemSlot: ItemSlotEnum!
  gemSlots: [GemSlotInput!]!
  stats: [statInput!]!
  isTwoHand: Boolean = false
}

type GemSlot {
  color: GemSlotColorEnum!
}

input GemSlotInput {
  color: GemSlotColorEnum!
}

type stat {
  key: StatEnum!
  value: Int!
}

input statInput {
  key: StatEnum!
  value: Int!
}

type WowClass {
  CompleteStats: BaseStats!
}

type PrimaryStats {
  Strength: Int!
  Agility: Int!
  Intellect: Int!
  Stamina: Int!
  Spirit: Int!
}

input PrimaryStatsInput {
  Strength: Int!
  Agility: Int!
  Intellect: Int!
  Stamina: Int!
  Spirit: Int!
}

type SecondaryStats {
  hitRating: Int!
  expertiseRating: Int!
  critRating: Int!
  hasteRating: Int!
  masteryRating: Int!
  weaponMaxDamage: Float!
  weaponMinDamage: Float!
  weaponSpeed: Float!
}

input SecondaryStatsInput {
  hitRating: Int!
  expertiseRating: Int!
  critRating: Int!
  hasteRating: Int!
  masteryRating: Int!
  weaponMaxDamage: Float!
  weaponMinDamage: Float!
  weaponSpeed: Float!
}

type BaseStats {
  PrimaryStats: PrimaryStats!
  SecondaryStats: SecondaryStats!
  attackPower: Int!
  spellPower: Int!
  hitChance: Float!
  expertiseChance: Float!
  critChance: Float!
  masteryChance: Float!
  dodgeChance: Float!
  parryChance: Float!
  blockChance: Float!
}

input BaseStatsInput {
  PrimaryStats: PrimaryStatsInput!
  SecondaryStats: SecondaryStatsInput!
  attackPower: Int!
  spellPower: Int!
  critChance: Float!
  masteryChance: Float!
  dodgeChance: Float!
  parryChance: Float!
  blockChance: Float!
}
